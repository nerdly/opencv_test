/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package opencv_test;

import java.text.SimpleDateFormat;
import java.util.Date;

import org.firstinspires.ftc.teamcode.PolePosition;
import org.firstinspires.ftc.teamcode.PolePositionFinder;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.Point;
import org.opencv.core.Scalar;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;


public class App {
    // Load the native code library for OpenCV from the gradle lib.
    static{ nu.pattern.OpenCV.loadLocally(); }

    /**
     * Main program function, execution starts here.
     * @param args string array of command line arguments. Not used.
     */
    public static void main(String[] args) {
        System.out.println("Welcome to OpenCV " + Core.VERSION);

        // create image capture for zeroth web cam.
        //VideoCapture vc = new VideoCapture(0);
        Mat image = Imgcodecs.imread("C:/Users/matth/OneDrive/Documents/Robotics/opencv_test/9in.jpg" ); 
        //writeImage(image, "original");

        PolePositionFinder ppf = new PolePositionFinder();


        PolePosition position = ppf.findPolePosition(image);
        
        System.out.println(position);

        Point tl = new Point((image.width()/2) + position.getOffsetFromCenter() - (position.getWidth()/2), 0);
        Point br = new Point((image.width()/2) + position.getOffsetFromCenter() + (position.getWidth()/2), image.height());
        Imgproc.rectangle(image, tl, br,new Scalar(0,255,0) , 10);

        Imgproc.line(image, new Point((image.width()/2) + position.getOffsetFromCenter(), 0), new Point((image.width()/2) + position.getOffsetFromCenter(), image.height()), new Scalar(255,0,0));
        writeImage(image, "Biggest");
    }

    /**
     * Writes out the image to a file in a specific directory.
     * 
     * File is named with current date/time stamp plus a provided label.
     * 
     * @param image The Mat of the image to print
     * @param label The label to include in the filename.
     */
    public static void writeImage(Mat image, String label)
    {
        // Generate name
        String name = "C:/Users/matth/OneDrive/Documents/Robotics/images/"  + new SimpleDateFormat( 
            "yyyy-MM-dd-hh-mm-ss") 
            .format(new Date( )) + label + ".jpg";

        // note filename to output
        System.out.println("Saving capture to " + name);

        // Write to file 
        Imgcodecs.imwrite(name, image); 
    } 
}
